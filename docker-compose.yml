version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    container_name: sports-platform-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: sports_knowledge_platform
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - sports-platform-network

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: sports-platform-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sports-platform-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sports-platform-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/sports_knowledge_platform?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secure_jwt_secret_key_here_change_in_production
      JWT_EXPIRE: 7d
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
      DASHSCOPE_API_URL: https://dashscope.aliyuncs.com/compatible-mode/v1
      DASHSCOPE_MODEL: qwen3-235b-a22b-instruct-2507
      EMAIL_SERVICE: gmail
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      - mongodb
      - redis
    volumes:
      - uploads_data:/app/uploads
    networks:
      - sports-platform-network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sports-platform-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - sports-platform-network

  # Nginx反向代理（生产环境）
  nginx:
    image: nginx:alpine
    container_name: sports-platform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - sports-platform-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  sports-platform-network:
    driver: bridge 